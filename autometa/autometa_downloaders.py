"""
Created on Mon Jul 15 14:57:13 2024

@author: mrutala
"""

# import urllib.request
# link = 'https://naif.jpl.nasa.gov/pub/naif/generic_kernels/lsk/naif0012.tls'
# urllib.request.urlretrieve(link, 'naif0012.tls')

import urllib

from bs4 import BeautifulSoup

def init_NAIFPaths():
    """
    Read the NAIF paths config file, which should be in the same directory as
    this function.

    Returns
    -------
    config : dict
        A nested dictionary of NAIF path info, as generated by tomllib

    """
    import tomllib
    
    config_path = 'autometa_naif_paths.toml'
    with open(config_path, "rb") as f:
        config = tomllib.load(f)
    return config


def get_NAIFFileList(baseurl):
    
    #   Open the url, and decode the response (i.e. HTML code)
    with urllib.request.urlopen(baseurl) as response:
        decoded_response = response.read().decode('utf-8')
    
    #   Parse the response (HTML code) into lines
    parsed_response = BeautifulSoup(decoded_response, 'html.parser')
    
    #   Find all HTML hyperlink tags ('a') with links (href=True)
    #   Then record just the link ('href') portion of each
    hrefs = list()
    for href in parsed_response.find_all('a', href=True):
        hrefs.append(href['href'])
    
    return hrefs

def get_NAIFKernels(baseurl, name_pattern):#, savedir, show_progress=True, force_update=False):
    import fnmatch
    
    
    all_files = get_NAIFFileList(baseurl)
    match_files = fnmatch.filter(all_files, name_pattern)
    
    return match_files
    
    #  Check if namepattern occurs in href_link_list
    
    #  Construct new urls including above matches
    
    #  url request complete url names
    
    
    # with file as urllib.request.URLopener():
    #     file.retreive(url)
